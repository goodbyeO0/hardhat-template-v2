{
  "address": "0x6081251E41fC8E0153B9125Bd9d7761542d11799",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ContributionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MatchingDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addToMatchingPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "calculateMatchingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "calculateTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeMatching",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        }
      ],
      "name": "getContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalContributions",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributorsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "matchingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "matchingPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalContributions",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributorsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roundEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96f46fb4b474d08e14f4ea0d7d6a59eb56c00eadbaafb9b0f1b4c6ace22d199c",
  "receipt": {
    "to": null,
    "from": "0x93Ab4B67E111FcD35D58CfA10E1a433114E82A5a",
    "contractAddress": "0x6081251E41fC8E0153B9125Bd9d7761542d11799",
    "transactionIndex": 5,
    "gasUsed": "1479203",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000002000000000000000000000000020000000000000000000800000000000000000000001000000000400000000000000000000000000000000000000001000000000000000000000000000004000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xaa6e32d23694f274ea06f9a16b26ec905edd1c427882c45b9b2befd8dbbb6f72",
    "transactionHash": "0x96f46fb4b474d08e14f4ea0d7d6a59eb56c00eadbaafb9b0f1b4c6ace22d199c",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 16795721,
        "transactionHash": "0x96f46fb4b474d08e14f4ea0d7d6a59eb56c00eadbaafb9b0f1b4c6ace22d199c",
        "address": "0x6081251E41fC8E0153B9125Bd9d7761542d11799",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000093ab4b67e111fcd35d58cfa10e1a433114e82a5a"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xaa6e32d23694f274ea06f9a16b26ec905edd1c427882c45b9b2befd8dbbb6f72"
      }
    ],
    "blockNumber": 16795721,
    "cumulativeGasUsed": "1752576",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x93Ab4B67E111FcD35D58CfA10E1a433114E82A5a",
    172800
  ],
  "numDeployments": 1,
  "solcInputHash": "d925acccacac3af45726b01679a7f9d9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MatchingDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addToMatchingPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"calculateMatchingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"calculateTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeMatching\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalContributions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributorsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"matchingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matchingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalContributions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributorsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuadraticFunding.sol\":\"QuadraticFunding\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/QuadraticFunding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// This line specifies the license under which the code is released\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n// This pragma directive tells the compiler to use Solidity version 0.8.0 or higher\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n// These import statements bring in OpenZeppelin's Ownable contract\\r\\n\\r\\ncontract QuadraticFunding is Ownable {\\r\\n    // This line declares the QuadraticFunding contract, which inherits from Ownable\\r\\n\\r\\n    struct Project {\\r\\n        address payable owner;\\r\\n        string name;\\r\\n        uint256 totalContributions;\\r\\n        uint256 contributorsCount;\\r\\n        mapping(address => uint256) contributions;\\r\\n    }\\r\\n    // This struct defines the structure for a project in the quadratic funding system\\r\\n\\r\\n    mapping(uint256 => Project) public projects;\\r\\n    // This mapping stores all projects, indexed by their ID\\r\\n\\r\\n    uint256 public projectCount;\\r\\n    // This variable keeps track of the total number of projects\\r\\n\\r\\n    uint256 public matchingPool;\\r\\n    // This variable stores the total amount in the matching pool\\r\\n\\r\\n    uint256 public roundEndTime;\\r\\n    // This variable stores the timestamp when the funding round ends\\r\\n\\r\\n    event ProjectCreated(uint256 indexed projectId, string name, address owner);\\r\\n    event ContributionMade(\\r\\n        uint256 indexed projectId,\\r\\n        address contributor,\\r\\n        uint256 amount\\r\\n    );\\r\\n    event MatchingDistributed(uint256 indexed projectId, uint256 amount);\\r\\n\\r\\n    // These events are emitted when a project is created, a contribution is made, and matching funds are distributed\\r\\n\\r\\n    constructor(\\r\\n        address initialOwner,\\r\\n        uint256 _roundDuration\\r\\n    ) Ownable(initialOwner) {\\r\\n        roundEndTime = block.timestamp + _roundDuration;\\r\\n    }\\r\\n\\r\\n    // The constructor initializes the contract with an initial owner and sets the round end time\\r\\n\\r\\n    function createProject(string memory _name) external {\\r\\n        require(block.timestamp < roundEndTime, \\\"Funding round has ended\\\");\\r\\n        projectCount++;\\r\\n        Project storage newProject = projects[projectCount]; // projects will has default value like 0, 0x\\r\\n        newProject.owner = payable(msg.sender);\\r\\n        newProject.name = _name;\\r\\n        emit ProjectCreated(projectCount, _name, msg.sender);\\r\\n    }\\r\\n\\r\\n    // This function allows users to create a new project\\r\\n\\r\\n    function contribute(uint256 _projectId) external payable {\\r\\n        require(block.timestamp < roundEndTime, \\\"Funding round has ended\\\");\\r\\n        require(\\r\\n            _projectId > 0 && _projectId <= projectCount,\\r\\n            \\\"Invalid project ID\\\"\\r\\n        );\\r\\n        require(msg.value > 0, \\\"Contribution must be greater than 0\\\");\\r\\n\\r\\n        Project storage project = projects[_projectId];\\r\\n        if (project.contributions[msg.sender] == 0) {\\r\\n            project.contributorsCount++;\\r\\n        }\\r\\n        project.contributions[msg.sender] += msg.value;\\r\\n        project.totalContributions += msg.value;\\r\\n\\r\\n        emit ContributionMade(_projectId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    // This function allows users to contribute to a project\\r\\n\\r\\n    function addToMatchingPool() external payable {\\r\\n        // anyone can add to matching pool\\r\\n        matchingPool += msg.value;\\r\\n    }\\r\\n\\r\\n    // This function allows the owner to add funds to the matching pool\\r\\n\\r\\n    function calculateMatchingAmount(\\r\\n        uint256 _projectId\\r\\n    ) public view returns (uint256) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        uint256 sqrtSum = 0;\\r\\n        uint256 projectValue = 0;\\r\\n\\r\\n        for (uint256 i = 1; i <= projectCount; i++) {\\r\\n            uint256 value = sqrt(\\r\\n                projects[i].totalContributions * projects[i].contributorsCount\\r\\n            );\\r\\n            sqrtSum += value * value;\\r\\n            if (i == _projectId) {\\r\\n                projectValue = value;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (projectValue * projectValue * matchingPool) / sqrtSum;\\r\\n    }\\r\\n\\r\\n    // This function calculates the matching amount for a project based on quadratic funding formula\\r\\n\\r\\n    function distributeMatching() external onlyOwner {\\r\\n        require(\\r\\n            block.timestamp >= roundEndTime,\\r\\n            \\\"Funding round has not ended yet\\\"\\r\\n        );\\r\\n\\r\\n        for (uint256 i = 1; i <= projectCount; i++) {\\r\\n            uint256 matchingAmount = calculateMatchingAmount(i);\\r\\n            projects[i].owner.transfer(matchingAmount);\\r\\n            emit MatchingDistributed(i, matchingAmount);\\r\\n        }\\r\\n\\r\\n        matchingPool = 0;\\r\\n    }\\r\\n\\r\\n    // This function distributes the matching funds to projects after the round ends\\r\\n\\r\\n    function sqrt(uint256 x) internal pure returns (uint256 y) {\\r\\n        uint256 z = (x + 1) / 2;\\r\\n        y = x;\\r\\n        while (z < y) {\\r\\n            y = z;\\r\\n            z = (x / z + z) / 2;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // This is a helper function to calculate the square root of a number\\r\\n\\r\\n    function getProjectDetails(\\r\\n        uint256 _projectId\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address owner,\\r\\n            string memory name,\\r\\n            uint256 totalContributions,\\r\\n            uint256 contributorsCount,\\r\\n            uint256 matchingAmount,\\r\\n            uint256 totalAmount\\r\\n        )\\r\\n    {\\r\\n        Project storage project = projects[_projectId];\\r\\n        uint256 matching = calculateMatchingAmount(_projectId);\\r\\n        uint256 total = project.totalContributions + matching;\\r\\n        return (\\r\\n            project.owner,\\r\\n            project.name,\\r\\n            project.totalContributions,\\r\\n            project.contributorsCount,\\r\\n            matching,\\r\\n            total\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // This function returns the details of a specific project\\r\\n\\r\\n    function getContribution(\\r\\n        uint256 _projectId,\\r\\n        address _contributor\\r\\n    ) external view returns (uint256) {\\r\\n        return projects[_projectId].contributions[_contributor];\\r\\n    }\\r\\n\\r\\n    // This function returns the contribution amount of a specific contributor to a specific project\\r\\n\\r\\n    function calculateTotalAmount(\\r\\n        uint256 _projectId\\r\\n    ) public view returns (uint256) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        uint256 matchingAmount = calculateMatchingAmount(_projectId);\\r\\n        return project.totalContributions + matchingAmount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfedc02941b5a3f3ac1fa6431d5501c2676e834f9ee92514dec9866c9c97230d0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c0538038062001c05833981810160405281019062000037919062000244565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200029c565b60405180910390fd5b620000be81620000db60201b60201c565b508042620000cd9190620002e8565b600481905550505062000323565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d182620001a4565b9050919050565b620001e381620001c4565b8114620001ef57600080fd5b50565b6000815190506200020381620001d8565b92915050565b6000819050919050565b6200021e8162000209565b81146200022a57600080fd5b50565b6000815190506200023e8162000213565b92915050565b600080604083850312156200025e576200025d6200019f565b5b60006200026e85828601620001f2565b925050602062000281858286016200022d565b9150509250929050565b6200029681620001c4565b82525050565b6000602082019050620002b360008301846200028b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620002f58262000209565b9150620003028362000209565b92508282019050808211156200031d576200031c620002b9565b5b92915050565b6118d280620003336000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063d8da5b2b11610059578063d8da5b2b146102aa578063e081dbf9146102e7578063e40205d614610324578063f2fde38b1461034f576100e8565b80638da5cb5b1461022e578063aacef18b14610259578063c1cbbca714610284578063c1d1af4b146102a0576100e8565b80635f8439e3116100c65780635f8439e31461018157806365c0f870146101c3578063675c4fe9146101da578063715018a614610217576100e8565b8063107046bd146100ed57806315ee4df11461012d57806336fbad2614610156575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610e13565b610378565b6040516101249493929190610f20565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f91906110a1565b610450565b005b34801561016257600080fd5b5061016b61055a565b60405161017891906110ea565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610e13565b610560565b6040516101ba96959493929190611126565b60405180910390f35b3480156101cf57600080fd5b506101d861067b565b005b3480156101e657600080fd5b5061020160048036038101906101fc9190610e13565b6107b9565b60405161020e91906110ea565b60405180910390f35b34801561022357600080fd5b5061022c61088f565b005b34801561023a57600080fd5b506102436108a3565b604051610250919061118e565b60405180910390f35b34801561026557600080fd5b5061026e6108cc565b60405161027b91906110ea565b60405180910390f35b61029e60048036038101906102999190610e13565b6108d2565b005b6102a8610ad6565b005b3480156102b657600080fd5b506102d160048036038101906102cc9190610e13565b610af1565b6040516102de91906110ea565b60405180910390f35b3480156102f357600080fd5b5061030e600480360381019061030991906111d5565b610b2f565b60405161031b91906110ea565b60405180910390f35b34801561033057600080fd5b50610339610b8d565b60405161034691906110ea565b60405180910390f35b34801561035b57600080fd5b5061037660048036038101906103719190611215565b610b93565b005b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546103c190611271565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed90611271565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505050908060020154908060030154905084565b6004544210610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b906112ee565b60405180910390fd5b600260008154809291906104a79061133d565b919050555060006001600060025481526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010190816105199190611531565b506002547fc0c54fed07481d0998e1446b2c13759606bf4f26b78306307413ac4c4309aa82833360405161054e929190611603565b60405180910390a25050565b60025481565b600060606000806000806000600160008981526020019081526020016000209050600061058c896107b9565b905060008183600201546105a09190611633565b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836001018460020154856003015485858480546105e390611271565b80601f016020809104026020016040519081016040528092919081815260200182805461060f90611271565b801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050505050945098509850985098509850985050505091939550919395565b610683610c19565b6004544210156106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf906116b3565b60405180910390fd5b6000600190505b60025481116107ae5760006106e3826107b9565b90506001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610761573d6000803e3d6000fd5b50817f4b30f14da257e8f9372b727d54b681b51ac782634be7128aeb9a298816b37bab8260405161079291906110ea565b60405180910390a25080806107a69061133d565b9150506106cf565b506000600381905550565b6000806001600084815260200190815260200160002090506000806000600190505b60025481116108605760006108266001600084815260200190815260200160002060030154600160008581526020019081526020016000206002015461082191906116d3565b610ca0565b9050808161083491906116d3565b8461083f9190611633565b935086820361084c578092505b5080806108589061133d565b9150506107db565b5081600354828361087191906116d3565b61087b91906116d3565b6108859190611744565b9350505050919050565b610897610c19565b6108a16000610cfd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6004544210610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d906112ee565b60405180910390fd5b60008111801561092857506002548111155b610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e906117c1565b60405180910390fd5b600034116109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a190611853565b60405180910390fd5b600060016000838152602001908152602001600020905060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610a2557806003016000815480929190610a1f9061133d565b91905055505b348160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a769190611633565b9250508190555034816002016000828254610a919190611633565b92505081905550817f0a4a91237423e0a1766a761c7cb029311d8b95d6b1b81db1b949a70c98b4e08e3334604051610aca929190611873565b60405180910390a25050565b3460036000828254610ae89190611633565b92505081905550565b6000806001600084815260200190815260200160002090506000610b14846107b9565b9050808260020154610b269190611633565b92505050919050565b60006001600084815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60045481565b610b9b610c19565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c04919061118e565b60405180910390fd5b610c1681610cfd565b50565b610c21610dc1565b73ffffffffffffffffffffffffffffffffffffffff16610c3f6108a3565b73ffffffffffffffffffffffffffffffffffffffff1614610c9e57610c62610dc1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c95919061118e565b60405180910390fd5b565b6000806002600184610cb29190611633565b610cbc9190611744565b90508291505b81811015610cf7578091506002818285610cdc9190611744565b610ce69190611633565b610cf09190611744565b9050610cc2565b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610df081610ddd565b8114610dfb57600080fd5b50565b600081359050610e0d81610de7565b92915050565b600060208284031215610e2957610e28610dd3565b5b6000610e3784828501610dfe565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6b82610e40565b9050919050565b610e7b81610e60565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ebb578082015181840152602081019050610ea0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ee382610e81565b610eed8185610e8c565b9350610efd818560208601610e9d565b610f0681610ec7565b840191505092915050565b610f1a81610ddd565b82525050565b6000608082019050610f356000830187610e72565b8181036020830152610f478186610ed8565b9050610f566040830185610f11565b610f636060830184610f11565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fae82610ec7565b810181811067ffffffffffffffff82111715610fcd57610fcc610f76565b5b80604052505050565b6000610fe0610dc9565b9050610fec8282610fa5565b919050565b600067ffffffffffffffff82111561100c5761100b610f76565b5b61101582610ec7565b9050602081019050919050565b82818337600083830152505050565b600061104461103f84610ff1565b610fd6565b9050828152602081018484840111156110605761105f610f71565b5b61106b848285611022565b509392505050565b600082601f83011261108857611087610f6c565b5b8135611098848260208601611031565b91505092915050565b6000602082840312156110b7576110b6610dd3565b5b600082013567ffffffffffffffff8111156110d5576110d4610dd8565b5b6110e184828501611073565b91505092915050565b60006020820190506110ff6000830184610f11565b92915050565b600061111082610e40565b9050919050565b61112081611105565b82525050565b600060c08201905061113b6000830189611117565b818103602083015261114d8188610ed8565b905061115c6040830187610f11565b6111696060830186610f11565b6111766080830185610f11565b61118360a0830184610f11565b979650505050505050565b60006020820190506111a36000830184611117565b92915050565b6111b281611105565b81146111bd57600080fd5b50565b6000813590506111cf816111a9565b92915050565b600080604083850312156111ec576111eb610dd3565b5b60006111fa85828601610dfe565b925050602061120b858286016111c0565b9150509250929050565b60006020828403121561122b5761122a610dd3565b5b6000611239848285016111c0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128957607f821691505b60208210810361129c5761129b611242565b5b50919050565b7f46756e64696e6720726f756e642068617320656e646564000000000000000000600082015250565b60006112d8601783610e8c565b91506112e3826112a2565b602082019050919050565b60006020820190508181036000830152611307816112cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061134882610ddd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361137a5761137961130e565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113aa565b6113f186836113aa565b95508019841693508086168417925050509392505050565b6000819050919050565b600061142e61142961142484610ddd565b611409565b610ddd565b9050919050565b6000819050919050565b61144883611413565b61145c61145482611435565b8484546113b7565b825550505050565b600090565b611471611464565b61147c81848461143f565b505050565b5b818110156114a057611495600082611469565b600181019050611482565b5050565b601f8211156114e5576114b681611385565b6114bf8461139a565b810160208510156114ce578190505b6114e26114da8561139a565b830182611481565b50505b505050565b600082821c905092915050565b6000611508600019846008026114ea565b1980831691505092915050565b600061152183836114f7565b9150826002028217905092915050565b61153a82610e81565b67ffffffffffffffff81111561155357611552610f76565b5b61155d8254611271565b6115688282856114a4565b600060209050601f83116001811461159b5760008415611589578287015190505b6115938582611515565b8655506115fb565b601f1984166115a986611385565b60005b828110156115d1578489015182556001820191506020850194506020810190506115ac565b868310156115ee57848901516115ea601f8916826114f7565b8355505b6001600288020188555050505b505050505050565b6000604082019050818103600083015261161d8185610ed8565b905061162c6020830184611117565b9392505050565b600061163e82610ddd565b915061164983610ddd565b92508282019050808211156116615761166061130e565b5b92915050565b7f46756e64696e6720726f756e6420686173206e6f7420656e6465642079657400600082015250565b600061169d601f83610e8c565b91506116a882611667565b602082019050919050565b600060208201905081810360008301526116cc81611690565b9050919050565b60006116de82610ddd565b91506116e983610ddd565b92508282026116f781610ddd565b9150828204841483151761170e5761170d61130e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061174f82610ddd565b915061175a83610ddd565b92508261176a57611769611715565b5b828204905092915050565b7f496e76616c69642070726f6a6563742049440000000000000000000000000000600082015250565b60006117ab601283610e8c565b91506117b682611775565b602082019050919050565b600060208201905081810360008301526117da8161179e565b9050919050565b7f436f6e747269627574696f6e206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b600061183d602383610e8c565b9150611848826117e1565b604082019050919050565b6000602082019050818103600083015261186c81611830565b9050919050565b60006040820190506118886000830185611117565b6118956020830184610f11565b939250505056fea2646970667358221220eec7f308c8b67dbddbe459027f7c015887abd144987c77fd13dd272c7750b7e864736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063d8da5b2b11610059578063d8da5b2b146102aa578063e081dbf9146102e7578063e40205d614610324578063f2fde38b1461034f576100e8565b80638da5cb5b1461022e578063aacef18b14610259578063c1cbbca714610284578063c1d1af4b146102a0576100e8565b80635f8439e3116100c65780635f8439e31461018157806365c0f870146101c3578063675c4fe9146101da578063715018a614610217576100e8565b8063107046bd146100ed57806315ee4df11461012d57806336fbad2614610156575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610e13565b610378565b6040516101249493929190610f20565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f91906110a1565b610450565b005b34801561016257600080fd5b5061016b61055a565b60405161017891906110ea565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610e13565b610560565b6040516101ba96959493929190611126565b60405180910390f35b3480156101cf57600080fd5b506101d861067b565b005b3480156101e657600080fd5b5061020160048036038101906101fc9190610e13565b6107b9565b60405161020e91906110ea565b60405180910390f35b34801561022357600080fd5b5061022c61088f565b005b34801561023a57600080fd5b506102436108a3565b604051610250919061118e565b60405180910390f35b34801561026557600080fd5b5061026e6108cc565b60405161027b91906110ea565b60405180910390f35b61029e60048036038101906102999190610e13565b6108d2565b005b6102a8610ad6565b005b3480156102b657600080fd5b506102d160048036038101906102cc9190610e13565b610af1565b6040516102de91906110ea565b60405180910390f35b3480156102f357600080fd5b5061030e600480360381019061030991906111d5565b610b2f565b60405161031b91906110ea565b60405180910390f35b34801561033057600080fd5b50610339610b8d565b60405161034691906110ea565b60405180910390f35b34801561035b57600080fd5b5061037660048036038101906103719190611215565b610b93565b005b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546103c190611271565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed90611271565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505050908060020154908060030154905084565b6004544210610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b906112ee565b60405180910390fd5b600260008154809291906104a79061133d565b919050555060006001600060025481526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010190816105199190611531565b506002547fc0c54fed07481d0998e1446b2c13759606bf4f26b78306307413ac4c4309aa82833360405161054e929190611603565b60405180910390a25050565b60025481565b600060606000806000806000600160008981526020019081526020016000209050600061058c896107b9565b905060008183600201546105a09190611633565b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836001018460020154856003015485858480546105e390611271565b80601f016020809104026020016040519081016040528092919081815260200182805461060f90611271565b801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050505050945098509850985098509850985050505091939550919395565b610683610c19565b6004544210156106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf906116b3565b60405180910390fd5b6000600190505b60025481116107ae5760006106e3826107b9565b90506001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610761573d6000803e3d6000fd5b50817f4b30f14da257e8f9372b727d54b681b51ac782634be7128aeb9a298816b37bab8260405161079291906110ea565b60405180910390a25080806107a69061133d565b9150506106cf565b506000600381905550565b6000806001600084815260200190815260200160002090506000806000600190505b60025481116108605760006108266001600084815260200190815260200160002060030154600160008581526020019081526020016000206002015461082191906116d3565b610ca0565b9050808161083491906116d3565b8461083f9190611633565b935086820361084c578092505b5080806108589061133d565b9150506107db565b5081600354828361087191906116d3565b61087b91906116d3565b6108859190611744565b9350505050919050565b610897610c19565b6108a16000610cfd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6004544210610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d906112ee565b60405180910390fd5b60008111801561092857506002548111155b610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e906117c1565b60405180910390fd5b600034116109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a190611853565b60405180910390fd5b600060016000838152602001908152602001600020905060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610a2557806003016000815480929190610a1f9061133d565b91905055505b348160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a769190611633565b9250508190555034816002016000828254610a919190611633565b92505081905550817f0a4a91237423e0a1766a761c7cb029311d8b95d6b1b81db1b949a70c98b4e08e3334604051610aca929190611873565b60405180910390a25050565b3460036000828254610ae89190611633565b92505081905550565b6000806001600084815260200190815260200160002090506000610b14846107b9565b9050808260020154610b269190611633565b92505050919050565b60006001600084815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60045481565b610b9b610c19565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c04919061118e565b60405180910390fd5b610c1681610cfd565b50565b610c21610dc1565b73ffffffffffffffffffffffffffffffffffffffff16610c3f6108a3565b73ffffffffffffffffffffffffffffffffffffffff1614610c9e57610c62610dc1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c95919061118e565b60405180910390fd5b565b6000806002600184610cb29190611633565b610cbc9190611744565b90508291505b81811015610cf7578091506002818285610cdc9190611744565b610ce69190611633565b610cf09190611744565b9050610cc2565b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610df081610ddd565b8114610dfb57600080fd5b50565b600081359050610e0d81610de7565b92915050565b600060208284031215610e2957610e28610dd3565b5b6000610e3784828501610dfe565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6b82610e40565b9050919050565b610e7b81610e60565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ebb578082015181840152602081019050610ea0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ee382610e81565b610eed8185610e8c565b9350610efd818560208601610e9d565b610f0681610ec7565b840191505092915050565b610f1a81610ddd565b82525050565b6000608082019050610f356000830187610e72565b8181036020830152610f478186610ed8565b9050610f566040830185610f11565b610f636060830184610f11565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fae82610ec7565b810181811067ffffffffffffffff82111715610fcd57610fcc610f76565b5b80604052505050565b6000610fe0610dc9565b9050610fec8282610fa5565b919050565b600067ffffffffffffffff82111561100c5761100b610f76565b5b61101582610ec7565b9050602081019050919050565b82818337600083830152505050565b600061104461103f84610ff1565b610fd6565b9050828152602081018484840111156110605761105f610f71565b5b61106b848285611022565b509392505050565b600082601f83011261108857611087610f6c565b5b8135611098848260208601611031565b91505092915050565b6000602082840312156110b7576110b6610dd3565b5b600082013567ffffffffffffffff8111156110d5576110d4610dd8565b5b6110e184828501611073565b91505092915050565b60006020820190506110ff6000830184610f11565b92915050565b600061111082610e40565b9050919050565b61112081611105565b82525050565b600060c08201905061113b6000830189611117565b818103602083015261114d8188610ed8565b905061115c6040830187610f11565b6111696060830186610f11565b6111766080830185610f11565b61118360a0830184610f11565b979650505050505050565b60006020820190506111a36000830184611117565b92915050565b6111b281611105565b81146111bd57600080fd5b50565b6000813590506111cf816111a9565b92915050565b600080604083850312156111ec576111eb610dd3565b5b60006111fa85828601610dfe565b925050602061120b858286016111c0565b9150509250929050565b60006020828403121561122b5761122a610dd3565b5b6000611239848285016111c0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128957607f821691505b60208210810361129c5761129b611242565b5b50919050565b7f46756e64696e6720726f756e642068617320656e646564000000000000000000600082015250565b60006112d8601783610e8c565b91506112e3826112a2565b602082019050919050565b60006020820190508181036000830152611307816112cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061134882610ddd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361137a5761137961130e565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113aa565b6113f186836113aa565b95508019841693508086168417925050509392505050565b6000819050919050565b600061142e61142961142484610ddd565b611409565b610ddd565b9050919050565b6000819050919050565b61144883611413565b61145c61145482611435565b8484546113b7565b825550505050565b600090565b611471611464565b61147c81848461143f565b505050565b5b818110156114a057611495600082611469565b600181019050611482565b5050565b601f8211156114e5576114b681611385565b6114bf8461139a565b810160208510156114ce578190505b6114e26114da8561139a565b830182611481565b50505b505050565b600082821c905092915050565b6000611508600019846008026114ea565b1980831691505092915050565b600061152183836114f7565b9150826002028217905092915050565b61153a82610e81565b67ffffffffffffffff81111561155357611552610f76565b5b61155d8254611271565b6115688282856114a4565b600060209050601f83116001811461159b5760008415611589578287015190505b6115938582611515565b8655506115fb565b601f1984166115a986611385565b60005b828110156115d1578489015182556001820191506020850194506020810190506115ac565b868310156115ee57848901516115ea601f8916826114f7565b8355505b6001600288020188555050505b505050505050565b6000604082019050818103600083015261161d8185610ed8565b905061162c6020830184611117565b9392505050565b600061163e82610ddd565b915061164983610ddd565b92508282019050808211156116615761166061130e565b5b92915050565b7f46756e64696e6720726f756e6420686173206e6f7420656e6465642079657400600082015250565b600061169d601f83610e8c565b91506116a882611667565b602082019050919050565b600060208201905081810360008301526116cc81611690565b9050919050565b60006116de82610ddd565b91506116e983610ddd565b92508282026116f781610ddd565b9150828204841483151761170e5761170d61130e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061174f82610ddd565b915061175a83610ddd565b92508261176a57611769611715565b5b828204905092915050565b7f496e76616c69642070726f6a6563742049440000000000000000000000000000600082015250565b60006117ab601283610e8c565b91506117b682611775565b602082019050919050565b600060208201905081810360008301526117da8161179e565b9050919050565b7f436f6e747269627574696f6e206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b600061183d602383610e8c565b9150611848826117e1565b604082019050919050565b6000602082019050818103600083015261186c81611830565b9050919050565b60006040820190506118886000830185611117565b6118956020830184610f11565b939250505056fea2646970667358221220eec7f308c8b67dbddbe459027f7c015887abd144987c77fd13dd272c7750b7e864736f6c63430008180033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 200,
        "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
        "label": "projects",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Project)195_storage)"
      },
      {
        "astId": 202,
        "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
        "label": "projectCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 204,
        "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
        "label": "matchingPool",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 206,
        "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
        "label": "roundEndTime",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Project)195_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct QuadraticFunding.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)195_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)195_storage": {
        "encoding": "inplace",
        "label": "struct QuadraticFunding.Project",
        "members": [
          {
            "astId": 184,
            "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 186,
            "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 188,
            "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
            "label": "totalContributions",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 190,
            "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
            "label": "contributorsCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 194,
            "contract": "contracts/QuadraticFunding.sol:QuadraticFunding",
            "label": "contributions",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}