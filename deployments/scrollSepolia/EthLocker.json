{
  "address": "0x29Dc9A21190D63A8f2505B27a67b268377a0ed4c",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "EthClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EthLocked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "requestedAmount",
          "type": "uint256"
        }
      ],
      "name": "claimEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        }
      ],
      "name": "getClaimHistory",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        }
      ],
      "name": "getLockedEthAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "getTransactionHashesBySender",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockEth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "senderTransactions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x415c39652f82be24b80be1f63a51f56e3ee9bdb2067f8afbb1fa8188f9d95237",
  "receipt": {
    "to": null,
    "from": "0x93Ab4B67E111FcD35D58CfA10E1a433114E82A5a",
    "contractAddress": "0x29Dc9A21190D63A8f2505B27a67b268377a0ed4c",
    "transactionIndex": 0,
    "gasUsed": "1225122",
    "logsBloom": "0x
    "blockHash": "0x598d24d9fe6339acf091eba94b00dcd33b1b1a47c6f4b0b0b0c9d9176d7c14d5",
    "transactionHash": "0x415c39652f82be24b80be1f63a51f56e3ee9bdb2067f8afbb1fa8188f9d95237",
    "logs": [],
    "blockNumber": 6884249,
    "cumulativeGasUsed": "1225122",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 10,
  "solcInputHash": "aacf5523c068f7634cfe26f34f83fb3f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EthClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EthLocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"name\":\"claimEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"getClaimHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"}],\"name\":\"getLockedEthAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"}],\"name\":\"getTransaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getTransactionHashesBySender\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockEth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"senderTransactions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EthKl.sol\":\"EthLocker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EthKl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract EthLocker {\\r\\n    struct Claim {\\r\\n        uint256 amount;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    struct Transaction {\\r\\n        address sender;\\r\\n        uint256 amount;\\r\\n        uint256 claimedAmount;\\r\\n        address[] claimers;\\r\\n        mapping(address => Claim[]) claims;\\r\\n    }\\r\\n\\r\\n    mapping(bytes32 => Transaction) public transactions;\\r\\n\\r\\n    // New mapping to store transaction hashes for each sender\\r\\n    mapping(address => bytes32[]) public senderTransactions;\\r\\n\\r\\n    event EthLocked(\\r\\n        bytes32 indexed transactionHash,\\r\\n        address indexed sender,\\r\\n        uint256 amount\\r\\n    );\\r\\n    event EthClaimed(\\r\\n        bytes32 indexed transactionHash,\\r\\n        address indexed recipient,\\r\\n        uint256 amount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n\\r\\n    // Function for the sender to lock ETH and generate a transaction hash\\r\\n    function lockEth() external payable returns (bytes32) {\\r\\n        require(msg.value > 0, \\\"Must send some ETH\\\");\\r\\n\\r\\n        // Create a unique hash for this transaction\\r\\n        bytes32 transactionHash = keccak256(\\r\\n            abi.encodePacked(msg.sender, msg.value, block.timestamp)\\r\\n        );\\r\\n\\r\\n        // Store the transaction details\\r\\n        Transaction storage txn = transactions[transactionHash];\\r\\n        txn.sender = msg.sender;\\r\\n        txn.amount = msg.value;\\r\\n        txn.claimedAmount = 0;\\r\\n\\r\\n        // Add the transaction hash to the sender's list\\r\\n        senderTransactions[msg.sender].push(transactionHash);\\r\\n\\r\\n        // Emit event for locked ETH\\r\\n        emit EthLocked(transactionHash, msg.sender, msg.value);\\r\\n\\r\\n        // Return the transaction hash (to be written to the NFC tag)\\r\\n        return transactionHash;\\r\\n    }\\r\\n\\r\\n    // Function for the recipient to claim ETH by scanning NFC and providing the transaction hash\\r\\n    function claimEth(\\r\\n        bytes32 transactionHash,\\r\\n        uint256 requestedAmount\\r\\n    ) external {\\r\\n        Transaction storage txn = transactions[transactionHash];\\r\\n\\r\\n        // Ensure the transaction exists\\r\\n        require(txn.sender != address(0), \\\"Transaction does not exist\\\");\\r\\n        require(\\r\\n            requestedAmount <= (txn.amount - txn.claimedAmount),\\r\\n            \\\"Requested amount exceeds available ETH\\\"\\r\\n        );\\r\\n\\r\\n        // Update the claimed amount\\r\\n        txn.claimedAmount += requestedAmount;\\r\\n\\r\\n        // Add the claimer to the list if they haven't claimed before\\r\\n        if (txn.claims[msg.sender].length == 0) {\\r\\n            txn.claimers.push(msg.sender);\\r\\n        }\\r\\n        txn.claims[msg.sender].push(Claim(requestedAmount, block.timestamp));\\r\\n\\r\\n        // Transfer ETH to the recipient\\r\\n        (bool success, ) = msg.sender.call{value: requestedAmount}(\\\"\\\");\\r\\n        require(success, \\\"ETH transfer failed\\\");\\r\\n\\r\\n        // Emit event for claimed ETH\\r\\n        emit EthClaimed(\\r\\n            transactionHash,\\r\\n            msg.sender,\\r\\n            requestedAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getTransaction(\\r\\n        bytes32 transactionHash\\r\\n    ) external view returns (address, uint256, uint256, address[] memory) {\\r\\n        Transaction storage txn = transactions[transactionHash];\\r\\n        return (txn.sender, txn.amount, txn.claimedAmount, txn.claimers);\\r\\n    }\\r\\n\\r\\n    function getClaimHistory(\\r\\n        bytes32 transactionHash,\\r\\n        address claimer\\r\\n    ) external view returns (uint256[] memory, uint256[] memory) {\\r\\n        Transaction storage txn = transactions[transactionHash];\\r\\n        Claim[] storage claims = txn.claims[claimer];\\r\\n        uint256[] memory amounts = new uint256[](claims.length);\\r\\n        uint256[] memory timestamps = new uint256[](claims.length);\\r\\n\\r\\n        for (uint i = 0; i < claims.length; i++) {\\r\\n            amounts[i] = claims[i].amount;\\r\\n            timestamps[i] = claims[i].timestamp;\\r\\n        }\\r\\n\\r\\n        return (amounts, timestamps);\\r\\n    }\\r\\n\\r\\n    function getLockedEthAmount(\\r\\n        bytes32 transactionHash\\r\\n    ) external view returns (uint256) {\\r\\n        Transaction storage txn = transactions[transactionHash];\\r\\n        require(txn.sender != address(0), \\\"Transaction does not exist\\\");\\r\\n        return txn.amount - txn.claimedAmount;\\r\\n    }\\r\\n\\r\\n    // New function to get all transaction hashes for a given address\\r\\n    function getTransactionHashesBySender(\\r\\n        address sender\\r\\n    ) external view returns (bytes32[] memory) {\\r\\n        return senderTransactions[sender];\\r\\n    }\\r\\n\\r\\n    // Fallback function to accept ETH directly\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x5556031046dcbdb97be02cde5631cc644026896d7c6d15eb6f9294b0cd9f9765\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611545806100206000396000f3fe60806040526004361061007f5760003560e01c806364f942531161004e57806364f94253146101705780639f2b0505146101ae578063b699b557146101eb578063d7611cc11461022857610086565b80633f17ba301461008b5780634aae13ca146100c85780635410aff514610108578063642f2eaf1461013157610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610bf7565b610246565b6040516100bf9190610c3d565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610bf7565b61030c565b6040516100ff9493929190610d57565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190610dcf565b6103f4565b005b34801561013d57600080fd5b5061015860048036038101906101539190610bf7565b610758565b60405161016793929190610e0f565b60405180910390f35b34801561017c57600080fd5b5061019760048036038101906101929190610e72565b6107a2565b6040516101a5929190610f70565b60405180910390f35b3480156101ba57600080fd5b506101d560048036038101906101d09190610fa7565b610958565b6040516101e29190610ff6565b60405180910390f35b3480156101f757600080fd5b50610212600480360381019061020d9190611011565b610989565b60405161021f91906110fc565b60405180910390f35b610230610a20565b60405161023d9190610ff6565b60405180910390f35b6000806000808481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e79061117b565b60405180910390fd5b8060020154816001015461030491906111ca565b915050919050565b60008060006060600080600087815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154826002015483600301808054806020026020016040519081016040528092919081815260200182805480156103dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610393575b505050505090509450945094509450509193509193565b60008060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061117b565b60405180910390fd5b806002015481600101546104b191906111ca565b8211156104f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ea90611270565b60405180910390fd5b818160020160008282546105079190611290565b9250508190555060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036105c05780600301339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808481526020014281525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060003373ffffffffffffffffffffffffffffffffffffffff168360405161067b906112f5565b60006040518083038185875af1925050503d80600081146106b8576040519150601f19603f3d011682016040523d82523d6000602084013e6106bd565b606091505b5050905080610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611356565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16847f9cc00e08065d4454bddef75eb6b87b7772319d84285b2a3a215d9e2246a765dc854260405161074a929190611376565b60405180910390a350505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6060806000806000868152602001908152602001600020905060008160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff8111156108205761081f61139f565b5b60405190808252806020026020018201604052801561084e5781602001602082028036833780820191505090505b5090506000828054905067ffffffffffffffff8111156108715761087061139f565b5b60405190808252806020026020018201604052801561089f5781602001602082028036833780820191505090505b50905060005b8380549050811015610946578381815481106108c4576108c36113ce565b5b9060005260206000209060020201600001548382815181106108e9576108e86113ce565b5b602002602001018181525050838181548110610908576109076113ce565b5b90600052602060002090600202016001015482828151811061092d5761092c6113ce565b5b60200260200101818152505080806001019150506108a5565b50818195509550505050509250929050565b6001602052816000526040600020818154811061097457600080fd5b90600052602060002001600091509150505481565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a1457602002820191906000526020600020905b815481526020019060010190808311610a00575b50505050509050919050565b6000803411610a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5b90611449565b60405180910390fd5b6000333442604051602001610a7b939291906114d2565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816001018190555060008160020181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827f8f51dda3f6ca01afca33ea08e5f2bea5787aad780ba1318d2807a039c0eaa0c434604051610bac9190610c3d565b60405180910390a3819250505090565b600080fd5b6000819050919050565b610bd481610bc1565b8114610bdf57600080fd5b50565b600081359050610bf181610bcb565b92915050565b600060208284031215610c0d57610c0c610bbc565b5b6000610c1b84828501610be2565b91505092915050565b6000819050919050565b610c3781610c24565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8382610c58565b9050919050565b610c9381610c78565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cce81610c78565b82525050565b6000610ce08383610cc5565b60208301905092915050565b6000602082019050919050565b6000610d0482610c99565b610d0e8185610ca4565b9350610d1983610cb5565b8060005b83811015610d4a578151610d318882610cd4565b9750610d3c83610cec565b925050600181019050610d1d565b5085935050505092915050565b6000608082019050610d6c6000830187610c8a565b610d796020830186610c2e565b610d866040830185610c2e565b8181036060830152610d988184610cf9565b905095945050505050565b610dac81610c24565b8114610db757600080fd5b50565b600081359050610dc981610da3565b92915050565b60008060408385031215610de657610de5610bbc565b5b6000610df485828601610be2565b9250506020610e0585828601610dba565b9150509250929050565b6000606082019050610e246000830186610c8a565b610e316020830185610c2e565b610e3e6040830184610c2e565b949350505050565b610e4f81610c78565b8114610e5a57600080fd5b50565b600081359050610e6c81610e46565b92915050565b60008060408385031215610e8957610e88610bbc565b5b6000610e9785828601610be2565b9250506020610ea885828601610e5d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ee781610c24565b82525050565b6000610ef98383610ede565b60208301905092915050565b6000602082019050919050565b6000610f1d82610eb2565b610f278185610ebd565b9350610f3283610ece565b8060005b83811015610f63578151610f4a8882610eed565b9750610f5583610f05565b925050600181019050610f36565b5085935050505092915050565b60006040820190508181036000830152610f8a8185610f12565b90508181036020830152610f9e8184610f12565b90509392505050565b60008060408385031215610fbe57610fbd610bbc565b5b6000610fcc85828601610e5d565b9250506020610fdd85828601610dba565b9150509250929050565b610ff081610bc1565b82525050565b600060208201905061100b6000830184610fe7565b92915050565b60006020828403121561102757611026610bbc565b5b600061103584828501610e5d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61107381610bc1565b82525050565b6000611085838361106a565b60208301905092915050565b6000602082019050919050565b60006110a98261103e565b6110b38185611049565b93506110be8361105a565b8060005b838110156110ef5781516110d68882611079565b97506110e183611091565b9250506001810190506110c2565b5085935050505092915050565b60006020820190508181036000830152611116818461109e565b905092915050565b600082825260208201905092915050565b7f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000600082015250565b6000611165601a8361111e565b91506111708261112f565b602082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111d582610c24565b91506111e083610c24565b92508282039050818111156111f8576111f761119b565b5b92915050565b7f52657175657374656420616d6f756e74206578636565647320617661696c616260008201527f6c65204554480000000000000000000000000000000000000000000000000000602082015250565b600061125a60268361111e565b9150611265826111fe565b604082019050919050565b600060208201905081810360008301526112898161124d565b9050919050565b600061129b82610c24565b91506112a683610c24565b92508282019050808211156112be576112bd61119b565b5b92915050565b600081905092915050565b50565b60006112df6000836112c4565b91506112ea826112cf565b600082019050919050565b6000611300826112d2565b9150819050919050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b600061134060138361111e565b915061134b8261130a565b602082019050919050565b6000602082019050818103600083015261136f81611333565b9050919050565b600060408201905061138b6000830185610c2e565b6113986020830184610c2e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4d7573742073656e6420736f6d65204554480000000000000000000000000000600082015250565b600061143360128361111e565b915061143e826113fd565b602082019050919050565b6000602082019050818103600083015261146281611426565b9050919050565b60008160601b9050919050565b600061148182611469565b9050919050565b600061149382611476565b9050919050565b6114ab6114a682610c78565b611488565b82525050565b6000819050919050565b6114cc6114c782610c24565b6114b1565b82525050565b60006114de828661149a565b6014820191506114ee82856114bb565b6020820191506114fe82846114bb565b60208201915081905094935050505056fea2646970667358221220c3bf3580ec40f18517e2cddb375639d528a396b3d3974c27ff49b1cfd9a4345e64736f6c63430008180033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c806364f942531161004e57806364f94253146101705780639f2b0505146101ae578063b699b557146101eb578063d7611cc11461022857610086565b80633f17ba301461008b5780634aae13ca146100c85780635410aff514610108578063642f2eaf1461013157610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610bf7565b610246565b6040516100bf9190610c3d565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610bf7565b61030c565b6040516100ff9493929190610d57565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190610dcf565b6103f4565b005b34801561013d57600080fd5b5061015860048036038101906101539190610bf7565b610758565b60405161016793929190610e0f565b60405180910390f35b34801561017c57600080fd5b5061019760048036038101906101929190610e72565b6107a2565b6040516101a5929190610f70565b60405180910390f35b3480156101ba57600080fd5b506101d560048036038101906101d09190610fa7565b610958565b6040516101e29190610ff6565b60405180910390f35b3480156101f757600080fd5b50610212600480360381019061020d9190611011565b610989565b60405161021f91906110fc565b60405180910390f35b610230610a20565b60405161023d9190610ff6565b60405180910390f35b6000806000808481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e79061117b565b60405180910390fd5b8060020154816001015461030491906111ca565b915050919050565b60008060006060600080600087815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154826002015483600301808054806020026020016040519081016040528092919081815260200182805480156103dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610393575b505050505090509450945094509450509193509193565b60008060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061117b565b60405180910390fd5b806002015481600101546104b191906111ca565b8211156104f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ea90611270565b60405180910390fd5b818160020160008282546105079190611290565b9250508190555060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036105c05780600301339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808481526020014281525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060003373ffffffffffffffffffffffffffffffffffffffff168360405161067b906112f5565b60006040518083038185875af1925050503d80600081146106b8576040519150601f19603f3d011682016040523d82523d6000602084013e6106bd565b606091505b5050905080610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611356565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16847f9cc00e08065d4454bddef75eb6b87b7772319d84285b2a3a215d9e2246a765dc854260405161074a929190611376565b60405180910390a350505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6060806000806000868152602001908152602001600020905060008160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff8111156108205761081f61139f565b5b60405190808252806020026020018201604052801561084e5781602001602082028036833780820191505090505b5090506000828054905067ffffffffffffffff8111156108715761087061139f565b5b60405190808252806020026020018201604052801561089f5781602001602082028036833780820191505090505b50905060005b8380549050811015610946578381815481106108c4576108c36113ce565b5b9060005260206000209060020201600001548382815181106108e9576108e86113ce565b5b602002602001018181525050838181548110610908576109076113ce565b5b90600052602060002090600202016001015482828151811061092d5761092c6113ce565b5b60200260200101818152505080806001019150506108a5565b50818195509550505050509250929050565b6001602052816000526040600020818154811061097457600080fd5b90600052602060002001600091509150505481565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a1457602002820191906000526020600020905b815481526020019060010190808311610a00575b50505050509050919050565b6000803411610a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5b90611449565b60405180910390fd5b6000333442604051602001610a7b939291906114d2565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816001018190555060008160020181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827f8f51dda3f6ca01afca33ea08e5f2bea5787aad780ba1318d2807a039c0eaa0c434604051610bac9190610c3d565b60405180910390a3819250505090565b600080fd5b6000819050919050565b610bd481610bc1565b8114610bdf57600080fd5b50565b600081359050610bf181610bcb565b92915050565b600060208284031215610c0d57610c0c610bbc565b5b6000610c1b84828501610be2565b91505092915050565b6000819050919050565b610c3781610c24565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8382610c58565b9050919050565b610c9381610c78565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cce81610c78565b82525050565b6000610ce08383610cc5565b60208301905092915050565b6000602082019050919050565b6000610d0482610c99565b610d0e8185610ca4565b9350610d1983610cb5565b8060005b83811015610d4a578151610d318882610cd4565b9750610d3c83610cec565b925050600181019050610d1d565b5085935050505092915050565b6000608082019050610d6c6000830187610c8a565b610d796020830186610c2e565b610d866040830185610c2e565b8181036060830152610d988184610cf9565b905095945050505050565b610dac81610c24565b8114610db757600080fd5b50565b600081359050610dc981610da3565b92915050565b60008060408385031215610de657610de5610bbc565b5b6000610df485828601610be2565b9250506020610e0585828601610dba565b9150509250929050565b6000606082019050610e246000830186610c8a565b610e316020830185610c2e565b610e3e6040830184610c2e565b949350505050565b610e4f81610c78565b8114610e5a57600080fd5b50565b600081359050610e6c81610e46565b92915050565b60008060408385031215610e8957610e88610bbc565b5b6000610e9785828601610be2565b9250506020610ea885828601610e5d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ee781610c24565b82525050565b6000610ef98383610ede565b60208301905092915050565b6000602082019050919050565b6000610f1d82610eb2565b610f278185610ebd565b9350610f3283610ece565b8060005b83811015610f63578151610f4a8882610eed565b9750610f5583610f05565b925050600181019050610f36565b5085935050505092915050565b60006040820190508181036000830152610f8a8185610f12565b90508181036020830152610f9e8184610f12565b90509392505050565b60008060408385031215610fbe57610fbd610bbc565b5b6000610fcc85828601610e5d565b9250506020610fdd85828601610dba565b9150509250929050565b610ff081610bc1565b82525050565b600060208201905061100b6000830184610fe7565b92915050565b60006020828403121561102757611026610bbc565b5b600061103584828501610e5d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61107381610bc1565b82525050565b6000611085838361106a565b60208301905092915050565b6000602082019050919050565b60006110a98261103e565b6110b38185611049565b93506110be8361105a565b8060005b838110156110ef5781516110d68882611079565b97506110e183611091565b9250506001810190506110c2565b5085935050505092915050565b60006020820190508181036000830152611116818461109e565b905092915050565b600082825260208201905092915050565b7f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000600082015250565b6000611165601a8361111e565b91506111708261112f565b602082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111d582610c24565b91506111e083610c24565b92508282039050818111156111f8576111f761119b565b5b92915050565b7f52657175657374656420616d6f756e74206578636565647320617661696c616260008201527f6c65204554480000000000000000000000000000000000000000000000000000602082015250565b600061125a60268361111e565b9150611265826111fe565b604082019050919050565b600060208201905081810360008301526112898161124d565b9050919050565b600061129b82610c24565b91506112a683610c24565b92508282019050808211156112be576112bd61119b565b5b92915050565b600081905092915050565b50565b60006112df6000836112c4565b91506112ea826112cf565b600082019050919050565b6000611300826112d2565b9150819050919050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b600061134060138361111e565b915061134b8261130a565b602082019050919050565b6000602082019050818103600083015261136f81611333565b9050919050565b600060408201905061138b6000830185610c2e565b6113986020830184610c2e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4d7573742073656e6420736f6d65204554480000000000000000000000000000600082015250565b600061143360128361111e565b915061143e826113fd565b602082019050919050565b6000602082019050818103600083015261146281611426565b9050919050565b60008160601b9050919050565b600061148182611469565b9050919050565b600061149382611476565b9050919050565b6114ab6114a682610c78565b611488565b82525050565b6000819050919050565b6114cc6114c782610c24565b6114b1565b82525050565b60006114de828661149a565b6014820191506114ee82856114bb565b6020820191506114fe82846114bb565b60208201915081905094935050505056fea2646970667358221220c3bf3580ec40f18517e2cddb375639d528a396b3d3974c27ff49b1cfd9a4345e64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 27,
        "contract": "contracts/EthKl.sol:EthLocker",
        "label": "transactions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Transaction)22_storage)"
      },
      {
        "astId": 32,
        "contract": "contracts/EthKl.sol:EthLocker",
        "label": "senderTransactions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Claim)6_storage)dyn_storage": {
        "base": "t_struct(Claim)6_storage",
        "encoding": "dynamic_array",
        "label": "struct EthLocker.Claim[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(Claim)6_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EthLocker.Claim[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Claim)6_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(Transaction)22_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EthLocker.Transaction)",
        "numberOfBytes": "32",
        "value": "t_struct(Transaction)22_storage"
      },
      "t_struct(Claim)6_storage": {
        "encoding": "inplace",
        "label": "struct EthLocker.Claim",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Transaction)22_storage": {
        "encoding": "inplace",
        "label": "struct EthLocker.Transaction",
        "members": [
          {
            "astId": 8,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 12,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "claimedAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "claimers",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 21,
            "contract": "contracts/EthKl.sol:EthLocker",
            "label": "claims",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_array(t_struct(Claim)6_storage)dyn_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}